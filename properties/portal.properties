# portal.properties

# These properties can be retrieved like this in your java code:
#
# String propertyValue  = PortalProperties.getProperty(propertyName);
# boolean propertyValue = PortalProperties.getPropertyAsBoolean(propertyName);
# byte propertyValue    = PortalProperties.getPropertyAsByte(propertyName);
# short propertyValue   = PortalProperties.getPropertyAsShort(propertyName);
# int propertyValue     = PortalProperties.getPropertyAsInt(propertyName);
# long propertyValue    = PortalProperties.getPropertyAsLong(propertyName);
# float propertyValue   = PortalProperties.getPropertyAsFloat(propertyName);
# double propertyValue  = PortalProperties.getPropertyAsDouble(propertyName);


# SAX parser implementation for use with JAXP
#
org.xml.sax.driver=org.apache.xerces.parsers.SAXParser


# Controls whether or not StylesheetSet objects are cached.
# Setting this to "on" improves performance, but then changes to
# any stylesheet list files (.ssl) will not take effect until
# the portal has been restarted.
#
org.jasig.portal.utils.XSLT.stylesheet_set_caching=on


# Controls whether or not pre-compiled stylesheets should be cached.
# Setting this to "on" improves performance, but then changes to
# any stylesheet files (.xsl) will not take effect until
# the portal has been restarted.
#
org.jasig.portal.utils.XSLT.stylesheet_root_caching=on


# Controls caching for framework stylesheets
#
org.jasig.portal.UserInstance.cache_enabled=on


# Controls caching at the character level.  Note: Character
# caching can only be enabled for serializers that implement
# the org.jasig.portal.serialize.CachingSerializer interface.
# Character caching offers greatly improved performance.
#
org.jasig.portal.UserInstance.character_cache_enabled=on


# Min size of xslt cache.
#
org.jasig.portal.UserInstance.system_xslt_cache_min_size=5


# Min size of system character block cache
#
org.jasig.portal.UserInstance.system_character_block_cache_min_size=10


# Controls thread pool for channel workers
#
org.jasig.portal.ChannelRenderer.pool_threads=on


# Controls whether or not channel output should be cached.
# Channel output is cached at the SAX event level unless
# character caching is possible and enabled.
#
org.jasig.portal.ChannelRenderer.cache_channels=on


# This is the default cache timeout value (in seconds) for all channels
# of type org.jasig.portal.channels.CGenericXSLT that do not specify
# their own cache timeout value. This default value is overridden by
# any CGenericXSLT channel that has a static parameter called "cacheTimeout"
#
org.jasig.portal.channels.CGenericXSLT.default_cache_timeout=900


# This is the default cache timeout value (in seconds) for the channel
# registry, a list of channels that one can subscribe to.
#
org.jasig.portal.ChannelRegistryManager.channel_registry_cache_timeout=900


# This is the default cache timeout value (in seconds) for the channel
# types, a list of java class / .cpd file combinations that one can publish.
#
org.jasig.portal.ChannelRegistryManager.channel_types_cache_timeout=900


# This is the default cache timeout value (in seconds) for the channel
# publishing documents (CPD).
#
org.jasig.portal.ChannelRegistryManager.cpd_cache_timeout=900


# Controls whether or not document type declaration should be included
# in serialized output of HTML and XHTML documents.
# Setting this to "no" will allow the appropriate document type
# declaration to appear in the document,
# e.g. <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/WD-html-in-xml/DTD/xhtml1-strict.dtd">
# Beware that some browsers such as Netscape have trouble rendering pages whose
# markup includes a document type.  If you change this setting to "no", you should
# do some testing to make sure that the portal renders correctly in the browsers you
# choose to support.
#
org.jasig.portal.MediaManager.omit_doctype=yes


# Controls whether or not serializer output should be indented.
# Setting this to "on" produces indented markup (HTML, XHTML, etc).
# It may be helpful during development to set this to "on", improving
# the readability of the source markup.  However, the identing can
# greatly increase the size of a page, so during production this should
# be set to "off".
#
org.jasig.portal.MediaManager.output_indenting=off


# Controls the behavior of Authentication Service regarding the automatic creation of
# portal user data for a user who has authenticated.  true indicates that the
# data should be automatically created.  [The class to implement the creation,
# IUserIdentityStore, is specified in the RDBM properties file.]
#
org.jasig.portal.services.Authentication.autoCreateUsers=true


# Controls the default user to use as a template for new users.
#
org.jasig.portal.services.Authentication.defaultTemplateUserName=demo


# If this is set to true then the PersonDirectory service will be used to populate users
#
org.jasig.portal.services.Authentication.usePersonDirectory=true


# Class name of the concrete IPersonManager implementation to be used
#
org.jasig.portal.security.PersonManagerFactory.implementation=org.jasig.portal.security.provider.SimplePersonManager


# Tells the ChainingSecurityContext whether or not to stop trying to authenticate a user
# once they have successfully passed authentication
#
org.jasig.portal.security.provider.ChainingSecurityContext.stopWhenAuthenticated=true


# Maximum file size we are willing to accept on a file upload
#
org.jasig.portal.PortalSessionManager.File_upload_max_size=3000000


# Controls features that prevent repeated requests from going through. 
# Set this to "yes" when load testing, debugging, or typing things 
# in on a command line.
# This value should normally be set to "no".
#
org.jasig.portal.PortalSessionManager.allow_repeated_requests=no


# Should we use PreparedStatements (if supported by the database/JDBC)
# (useful to disable when debugging the database code)
#
org.jasig.portal.RDBMServices.usePreparedStatements=true


# Implementations of persistant store interfaces
#
org.jasig.portal.ChannelRegistryStoreFactory.implementation=org.jasig.portal.RDBMChannelRegistryStore
org.jasig.portal.UserLayoutStoreFactory.implementation=org.jasig.portal.RDBMUserLayoutStore
org.jasig.portal.UserIdentityStoreFactory.implementation=org.jasig.portal.RDBMUserIdentityStore
org.jasig.portal.utils.CounterStoreFactory.implementation=org.jasig.portal.utils.RDBMCounterStore
org.jasig.portal.groups.EntityGroupFactory.implementation=org.jasig.portal.groups.RDBMEntityGroupStore


# Factory for Sequence ID (OID) Generator
#
org.jasig.portal.SequenceGeneratorFactory.implementation=org.jasig.portal.ReferenceSequenceGeneratorFactory


# IGroupServiceFactory  used by the GroupService
#
org.jasig.portal.groups.GroupServiceFactory=org.jasig.portal.groups.ReferenceGroupServiceFactory


# Key for IEntityGroup representing everyone (all portal users).
#
org.jasig.portal.groups.ReferenceGroupService.key_org.jasig.portal.security.IPerson=0

# Key for IEntityGroup representing all channel categories.
#
org.jasig.portal.groups.ReferenceGroupService.key_org.jasig.portal.ChannelDefinition=50


# Key for IEntityGroup representing portal system administrators (those with superuser privileges)
#
org.jasig.portal.groups.ReferenceGroupService.key_org.jasig.portal.security.IPerson.PortalAdministrators=14

# Name Finder Factories:
#
org.jasig.portal.services.EntityNameFinderService.NameFinderFactory.implementation_org.jasig.portal.security.IPerson=org.jasig.portal.groups.ReferencePersonNameFinderFactory
org.jasig.portal.services.EntityNameFinderService.NameFinderFactory.implementation_org.jasig.portal.groups.IEntityGroup=org.jasig.portal.groups.EntityGroupNameFinderFactory
org.jasig.portal.services.EntityNameFinderService.NameFinderFactory.implementation_org.jasig.portal.ChannelDefinition=org.jasig.portal.groups.ReferenceChannelNameFinderFactory

# Profile management settings:
#
org.jasig.portal.channels.UserPreferences.ManageProfilesState.allowUserProfiles=true
org.jasig.portal.channels.UserPreferences.ManageProfilesState.allowSystemProfileBrowserMaping=true
org.jasig.portal.channels.UserPreferences.ManageProfilesState.allowNewProfileCreation=true


# Specifies if browser->profile mappings guessed by matching
# regular expressions in browser.properties should be persisted
# in the database.
#
org.jasig.portal.GuestUserLayoutManager.save_profile_guesses=true
