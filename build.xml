<!--
 | Detailed help documenation lives in docs/antHelp.txt, please refer to this file or
 | run 'ant help' for usage of this file.
 |
 | Comments in this file should be targeted to the maintenance of the build script.
 +-->
<project name="uPortal" default="help" basedir="." xmlns:up="urn:up-util-ant" xmlns:artifact="urn:maven-artifact-ant">
    <property file="build.properties" />

    <!--
     | Properties that describe the maven project
     +-->
    <property name="uportal-pluto-support.dir" value="${basedir}/uportal-pluto-support" />
    <property name="uportal-impl.dir" value="${basedir}/uportal-impl" />
    <property name="uportal-war.dir" value="${basedir}/uportal-war" />
    <property name="uportal-ear.dir" value="${basedir}/uportal-ear" />
    <property name="uportal-ear-deployer.dir" value="${basedir}/uportal-ear-deployer" />
    <property name="uportal-ant-tasks.dir" value="${basedir}/uportal-ant-tasks" />


    <!-- ============================== Public Targets ============================== -->

    <target name="help" description="Prints information about using this ant build file.">
        <loadfile property="helpMessage" srcFile="docs/antHelp.txt" />
        <echo message="${helpMessage}" />
    </target>

    <target name="bootstrap" description="Installs dependencies into the local maven respository that are not available publicly">
        <ant dir="bootstrap" antfile="build.xml" />
    </target>

    <target name="initportal" description="Runs all the targets necessary to deploy the portal and prepare the portal database">
        <echo message="Initializing uPortal" />
        <antcall target="bootstrap" />
        <antcall target="deploy-ear" />
        <antcall target="db" />
        <antcall target="pubchan" />
        <antcall target="i18n-db" />
        <echo message="Finished initializing uPortal" />
    </target>

    <target name="db" description="Loads database tables and data">
        <uportal-impl-macro>
            <property name="usetable" value=" " />
            <property name="tablefile" value=" " />
            <property name="usedata" value=" " />
            <property name="datafile" value=" " />
            <property name="createscript" value=" " />
            <property name="droptables" value=" " />
            <property name="createtables" value=" " />
            <property name="populatetables" value=" " />
            <property name="localeaware" value=" " />
            <property name="adminlocale" value=" " />

            <echo message="Invoking DbLoader" />
            <java fork="true" failonerror="true" dir="${uportal-impl.dir}" classname="org.jasig.portal.tools.dbloader.DbLoader">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${usetable}" />
                <arg value="${tablefile}" />
                <arg value="${usedata}" />
                <arg value="${datafile}" />
                <arg value="${createscript}" />
                <arg value="${droptables}" />
                <arg value="${createtables}" />
                <arg value="${populatetables}" />
                <arg value="${localeaware}" />
                <arg value="${adminlocale}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="i18n-db" description="Loads internationalization tables and data">
        <echo message="Invoking DbLoader for localizationed database setting" />
        <antcall target="db">
            <param name="usetable" value="-t" />
            <param name="tablefile" value="/properties/db/tables-i18n.xml" />
            <param name="usedata" value="-d" />
            <param name="datafile" value="/properties/db/data-i18n.xml" />
        </antcall>
    </target>

    <target name="l10n-db" description="Loads localized data">
        <echo message="Invoking DbLoader for localizationed database setting" />
        <antcall target="db">
            <param name="locale" value="en_US" />
            <param name="usetable" value="-t" />
            <param name="tablefile" value="/properties/db/tables-l10n.xml" />
            <param name="usedata" value="-d" />
            <param name="datafile" value="/properties/db/data-l10n.xml" />
            <param name="localeaware" value="-l" />
            <param name="adminlocale" value="en_US" />
        </antcall>
    </target>

    <target name="dbunload" description="Dumps a database table to a flat file in XML format">
        <uportal-impl-macro>
            <property name="tablename" value=" " />
            <property name="xmlfile" value=" " />

            <echo message="Invoking DbUnload" />
            <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.dbloader.DbUnload">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${tablename}" />
                <arg value="${xmlfile}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="dbtest" description="Displays information about the database defined in rdbm.properties">
        <uportal-impl-macro>
            <echo message="Invoking DbTest" />
            <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.DbTest">
                <classpath refid="uportal-impl-full.classpath" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="pubchan" description="Publishes channels">
        <uportal-impl-macro>
            <!--
             | If no file or directory is specified, set a default directory
             +-->
            <if>
                <not>
                    <or>
                        <isset property="directory" />
                        <isset property="channel" />
                    </or>
                </not>
                <then>
                    <property name="directory" value="${uportal-impl.dir}/src/main/config/chanpub/" />
                </then>
            </if>

            <!--
             | Set argument prefix properties if the argument value exists
             +-->
            <if>
                <isset property="directory" />
                <then>
                    <property name="directoryArg" value="-d" />
                </then>
                <else>
                    <property name="directoryArg" value="" />
                    <property name="directory" value="" />
                </else>
            </if>
            <if>
                <isset property="channel" />
                <then>
                    <property name="channelArg" value="-f" />
                </then>
                <else>
                    <property name="channelArg" value="" />
                    <property name="channel" value="" />
                </else>
            </if>

            <echo message="Invoking Channel Publisher Tool" />
            <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.chanpub.ChannelPublisher">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${directoryArg}" />
                <arg value="${directory}" />

                <arg value="${channelArg}" />
                <arg value="${channel}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="regchantype" description="Registers a new channel type">
        <uportal-impl-macro>
            <property name="class" value=" " />
            <property name="name" value=" " />
            <property name="description" value=" " />
            <property name="uri" value=" " />

            <echo message="Invoking RegisterChannelType" />
            <java dir="${basedir}" classname="org.jasig.portal.tools.RegisterChannelType">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${class}" />
                <arg value="${name}" />
                <arg value="${description}" />
                <arg value="${uri}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="deploy-ear" description="Deploy uPortal and dependent libraries and portlets to the servlet container">
        <uportal-ant-tasks-macro>
            <typedef resource="org/jasig/portal/ant/antlib.xml" uri="urn:up-util-ant">
                <classpath refid="uportal-ant-tasks-full.classpath" />
            </typedef>

            <uportal-ear-macro>
                <up:tomcatEarDeploy ear="${uportal-ear.artifact}" catalinaHome="${server.home}" catalinaBase="${server.base}" extractWars="true" removeExistingDirectories="true" />
            </uportal-ear-macro>
        </uportal-ant-tasks-macro>
    </target>

    <target name="deploy-war" description="Deploy the uPortal web application to the servlet container">
        <uportal-war-macro>
            <antcall target="deployPortletApp">
                <param name="portletApp" value="${uportal-war.artifact}" />
            </antcall>
        </uportal-war-macro>
    </target>

    <target name="deployPortletApp" description="Deploys a portlet application">
        <uportal-impl-macro>
            <fail unless="portletApp">deployPortletApp Ant target requires the name of the portlet app to deploy.  
                Here it was invoked with the portletApp property not set.  
                It therefore is failing after having done nothing.
                Execute the help target ('ant help') for help on this and other targets in the uPortal build.
            </fail>

            <echo message="Invoking Portlet Application Deployment Tool" />
            <java fork="true" failonerror="true" dir="${basedir}" classname="org.danann.cernunnos.runtime.Main">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="classpath://org/jasig/portal/container/deploy/deploy-portlet-app.crn" />
                <arg value="${portletApp}" />
                <arg value="${server.base}/webapps" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="md5passwd" description="Creates a user in the UP_PERSON_DIR table">
        <uportal-impl-macro>
            <property name="username" value=" " />

            <echo message="Invoking Md5Passwd" />
            <java dir="${basedir}" classname="org.jasig.portal.security.Md5Passwd">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="-c" />
                <arg value="${username}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="deluser" description="Delete traces of a user from the portal database">
        <uportal-impl-macro>
            <property name="user" value=" " />

            <echo message="Invoking DeleteUser" />
            <java dir="${basedir}" classname="org.jasig.portal.tools.DeleteUser" fork="true">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${user}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="addstylesheet" description="Registers a new theme or structure">
        <uportal-impl-macro>
            <property name="stylesheetType" value=" " />
            <property name="stylesheetUri" value=" " />
            <property name="descriptionUri" value=" " />

            <echo message="Invoking RegisterStylesheet (add)" />
            <java dir="${basedir}" fork="true" classname="org.jasig.portal.tools.RegisterStylesheet">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${stylesheetType}" />
                <arg value="${stylesheetUri}" />
                <arg value="${descriptionUri}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="modstylesheet" description="Modifies an existing theme or structure">
        <uportal-impl-macro>
            <property name="stylesheetType" value=" " />
            <property name="stylesheetUri" value=" " />
            <property name="descriptionUri" value=" " />
            <property name="stylesheetId" value=" " />

            <echo message="Invoking RegisterStylesheet (modify)" />
            <java dir="${basedir}" fork="true" classname="org.jasig.portal.tools.RegisterStylesheet">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${stylesheetType}" />
                <arg value="-u" />
                <arg value="${stylesheetUri}" />
                <arg value="${descriptionUri}" />
                <arg value="${stylesheetId}" />
            </java>
        </uportal-impl-macro>
    </target>

    <target name="delstylesheet" description="Deletes an existing theme or structure">
        <uportal-impl-macro>
            <property name="stylesheetType" value=" " />
            <property name="stylesheetId" value=" " />

            <echo message="Invoking RegisterStylesheet (delete)" />
            <java dir="${basedir}" classname="org.jasig.portal.tools.RegisterStylesheet">
                <classpath refid="uportal-impl-full.classpath" />

                <arg value="${stylesheetType}" />
                <arg value="-d" />
                <arg value="${stylesheetId}" />
            </java>
        </uportal-impl-macro>
    </target>

    <!-- ============================== Deprecated Targets ============================== -->
    <target name="all">
        <echo>The "all" Ant task is no supported. Run 'mvn clean compile' for the same result.</echo>
    </target>
    <target name="clean">
        <echo>The "clean" Ant task is no supported. Run 'mvn clean' for the same result.</echo>
    </target>
    <target name="compile">
        <echo>The "compile" Ant task is no supported. Run 'mvn compile' for the same result.</echo>
    </target>
    <target name="compiletests">
        <echo>The "compiletests" Ant task is no supported. Run 'mvn test-compile' for the same result.</echo>
    </target>
    <target name="deploy">
        <echo>The "deploy" Ant task is no supported. Run 'ant deploy-war' for the same result.</echo>
    </target>
    <target name="dist">
        <echo>The "dist" Ant task is no supported. Run 'mvn package site' for a similar result.</echo>
    </target>
    <target name="javadoc">
        <echo>The "javadoc" Ant task is no supported. Run 'mvn javadoc:javadoc' for the same result.</echo>
    </target>
    <target name="runtests">
        <echo>The "runtests" Ant task is no supported. Run 'mvn test' for the same result.</echo>
    </target>


    <!-- ============================== Maven Support Macros ============================== -->

    <!--
     | Macro for tasks involving a maven project. The macro loads the pom, creates a classpath,
     | ensures the project artifact is up-to-date, and runs the <sub-tasks> element. If the
     | artifact is not up-to-date the <pre-package> element can be used to add behavior before
     | 'mvn package' is called on the project.
     |
     | The following are available in the pre-package and sub-tasks elements:
     | pom object   - @{project-name}.pom       - The Maven POM object for the project
     | property     - @{project-name}.artifact  - The full path to the final artifact
     | path         - @{project-name}.classpath - The projects classpath not including the artifact
     +-->
    <macrodef name="maven-artifact-macro">
        <attribute name="project-name" />
        <attribute name="project-path" />
        <attribute name="checkFilesId" default="null" />

        <element name="sub-tasks" optional="false" implicit="true" />

        <sequential>
            <!--
             | Load the pom & classpath
             +-->
            <artifact:pom file="@{project-path}/pom.xml" id="@{project-name}.pom" />
            <artifact:dependencies pathid="@{project-name}.classpath" verbose="false">
                <pom refid="@{project-name}.pom" />
            </artifact:dependencies>

            <!--
             | Define the location of the resulting artifact
             +-->
            <property name="@{project-name}.artifact" value="${@{project-name}.pom.build.directory}/${@{project-name}.pom.build.finalName}.${@{project-name}.pom.packaging}" />

            <!--
             | Do uptodate checking for project files and dependencies
             | TODO - parse out relative path from '${@{project-name}.build.directory}' and use that for exclude
             +-->
            <uptodate property="@{project-name}.projectFilesUTD" targetfile="${@{project-name}.artifact}">
                <srcfiles dir="@{project-path}" defaultexcludes="true">
                    <exclude name="target/" />
                </srcfiles>
            </uptodate>
            <if>
                <not>
                    <equals arg1="@{checkFilesId}" arg2="null" />
                </not>
                <then>
                    <uptodate property="@{project-name}.dependenciesUTD" targetfile="${@{project-name}.artifact}">
                        <srcfiles refid="@{checkFilesId}" />
                    </uptodate>
                </then>
                <else>
                    <property name="@{project-name}.dependenciesUTD" value="true" />
                </else>
            </if>

            <!--
             | Call 'mvn package' if files in the project are not up-to-date
             +-->
            <if>
                <not>
                    <and>
                        <equals arg1="${@{project-name}.projectFilesUTD}" arg2="true" />
                        <equals arg1="${@{project-name}.dependenciesUTD}" arg2="true" />
                    </and>
                </not>
                <then>
                    <echo message="Artifact '${@{project-name}.artifact}' is not available or out-of-date, calling 'mvn install'" />

                    <antcall target="mvn">
                        <param name="dir" value="@{project-path}" />
                        <param name="goal" value="install" />
                    </antcall>
                </then>
                <else>
                    <echo message="Artifact '${@{project-name}.artifact}' is up-to-date" />
                    <artifact:install file="${@{project-name}.artifact}" pomrefid="@{project-name}.pom" />
                </else>
            </if>

            <!--
             | Execute the sub-tasks
             +-->
            <sub-tasks />
        </sequential>
    </macrodef>

    <!--
     | Provides a wrapper for tasks that need a classpath that includes the uPortal Pluto
     | support source and all of its dependencies. The task also ensures the uportal-pluto-support
     | JAR exists and is up to date.
     |
     | The following are available in the pluto-support-sub-tasks element:
     | pom object   - uportal-pluto-support.pom             - The Maven POM object for the uportal-impl pom
     | property     - uportal-pluto-support.artifact        - The full path to the uportal-impl JAR
     | path         - uportal-pluto-support.classpath       - The uportal-impl classpath not including the uportal-impl JAR
     | path         - uportal-pluto-support-full.classpath  - The uportal-impl classpath including the uportal-impl JAR
     +-->
    <macrodef name="uportal-pluto-support-macro">
        <element name="pluto-support-sub-tasks" optional="false" implicit="true" />

        <sequential>
            <antcall target="install-root-pom" />

            <maven-artifact-macro project-name="uportal-pluto-support" project-path="${uportal-pluto-support.dir}">
                <!--
                 | Include the uportal-pluto-support JAR in the final classpath
                 +-->
                <path id="uportal-pluto-support-full.classpath">
                    <path refid="uportal-pluto-support.classpath" />
                    <pathelement location="${uportal-pluto-support.artifact}" />
                </path>

                <!--
                 | Execute the pluto-support-sub-tasks
                 +-->
                <pluto-support-sub-tasks />
            </maven-artifact-macro>
        </sequential>
    </macrodef>

    <!--
     | Provides a wrapper for tasks that need a classpath that includes the uPortal source
     | and all of its dependencies. The task also ensures the uportal-impl JAR exists and
     | is up to date.
     |
     | The following are available in the impl-sub-tasks element:
     | properties from the uportal-pluto-support-macro macrodef
     | pom object   - uportal-impl.pom                      - The Maven POM object for the uportal-impl pom
     | property     - uportal-impl.artifact                 - The full path to the uportal-impl JAR
     | path         - uportal-impl.classpath                - The uportal-impl classpath not including the uportal-impl JAR
     | path         - uportal-impl-full.classpath           - The uportal-impl classpath including the uportal-impl JAR
     +-->
    <macrodef name="uportal-impl-macro">
        <element name="impl-sub-tasks" optional="false" implicit="true" />

        <sequential>
            <antcall target="checkVersion" />
            <uportal-pluto-support-macro>
                <maven-artifact-macro project-name="uportal-impl" project-path="${uportal-impl.dir}">
                    <!--
                     | Include the uportal-impl JAR in the final classpath
                     +-->
                    <path id="uportal-impl-full.classpath">
                        <path refid="uportal-impl.classpath" />
                        <pathelement location="${uportal-impl.artifact}" />
                    </path>

                    <!--
                     | Execute the impl-sub-tasks
                     +-->
                    <impl-sub-tasks />
                </maven-artifact-macro>
            </uportal-pluto-support-macro>
        </sequential>
    </macrodef>

    <!--
     | Provides a wrapper for tasks that need a classpath that includes all of the uPortal WAR
     | dependencies. The task also ensures the uportal-war WAR exists and is up to date.
     |
     | The following are available in the war-sub-tasks element:
     | properties from the uportal-impl-macro macrodef
     | pom object   - uportal-war.pom                       - The Maven POM object for the uportal-war pom
     | property     - uportal-war.artifact                  - The full path to the uportal-war WAR
     | path         - uportal-war.classpath                 - The uportal-war classpath not including the uportal-war WAR
     +-->
    <macrodef name="uportal-war-macro">
        <element name="war-sub-tasks" optional="false" implicit="true" />

        <sequential>
            <antcall target="checkVersion" />
            <uportal-impl-macro>
                <fileset id="uportal-impl-artifacts" file="${uportal-impl.artifact}" />
                <maven-artifact-macro project-name="uportal-war" project-path="${uportal-war.dir}" checkfilesid="uportal-impl-artifacts">
                    <!--
                     | Execute the war-sub-tasks
                     +-->
                    <war-sub-tasks />
                </maven-artifact-macro>
            </uportal-impl-macro>
        </sequential>
    </macrodef>

    <!--
     | Provides a wrapper for tasks that need a classpath that includes all of the uPortal EAR
     | dependencies. The task also ensures the uportal-ear EAR exists and is up to date.
     |
     | The following are available in the ear-sub-tasks element:
     | properties from the uportal-war-macro macrodef
     | pom object   - uportal-ear.pom               - The Maven POM object for the uportal-ear pom
     | property     - uportal-ear.artifact          - The full path to the uportal-ear EAR
     | path         - uportal-ear.classpath         - The uportal-ear classpath not including the uportal-ear EAR
     +-->
    <macrodef name="uportal-ear-macro">
        <element name="ear-sub-tasks" optional="false" implicit="true" />

        <sequential>
            <antcall target="checkVersion" />
            <uportal-war-macro>
                <fileset id="uportal-war-artifacts" file="${uportal-war.artifact}" />
                <maven-artifact-macro project-name="uportal-ear" project-path="${uportal-ear.dir}" checkfilesid="uportal-war-artifacts">
                    <!--
                     | Execute the ear-sub-tasks
                     +-->
                    <ear-sub-tasks />
                </maven-artifact-macro>
            </uportal-war-macro>
        </sequential>
    </macrodef>

    <!--
     | Provides a wrapper for tasks that need a classpath that includes the uPortal ear deployer
     | and all of its dependencies. The task also ensures the uportal-impl JAR exists and
     | is up to date.
     |
     | The following are available in the ear-deployer-sub-tasks element:
     | pom object   - uportal-ear-deployer.pom              - The Maven POM object for the uportal-ear-deployer pom
     | property     - uportal-ear-deployer.artifact         - The full path to the uportal-ear-deployer JAR
     | path         - uportal-ear-deployer.classpath        - The uportal-ear-deployer classpath not including the uportal-ear-deployer JAR
     | path         - uportal-ear-deployer-full.classpath   - The uportal-impl classpath including the uportal-impl JAR
     +-->
    <macrodef name="uportal-ear-deployer-macro">
        <element name="ear-deployer-sub-tasks" optional="false" implicit="true" />

        <sequential>
            <antcall target="install-root-pom" />

            <maven-artifact-macro project-name="uportal-ear-deployer" project-path="${uportal-ear-deployer.dir}">
                <!--
                 | Include the uportal-ear-deployer JAR in the final classpath
                 +-->
                <path id="uportal-ear-deployer-full.classpath">
                    <path refid="uportal-ear-deployer.classpath" />
                    <pathelement location="${uportal-ear-deployer.artifact}" />
                </path>

                <!--
                 | Execute the ear-deployer-sub-tasks
                 +-->
                <ear-deployer-sub-tasks />
            </maven-artifact-macro>
        </sequential>
    </macrodef>

    <!--
     | Provides a wrapper for tasks that need a classpath that includes all of the uPortal WAR
     | dependencies. The task also ensures the uportal-war WAR exists and is up to date.
     |
     | The following are available in the war-sub-tasks element:
     | properties from the uportal-ear-deployer-macro macrodef
     | pom object   - uportal-ant-tasks.pom                 - The Maven POM object for the uportal-ant-tasks pom
     | property     - uportal-ant-tasks.artifact            - The full path to the uportal-ant-tasks JAR
     | path         - uportal-ant-tasks.classpath           - The uportal-ant-tasks classpath not including the uportal-ant-tasks WAR
     | path         - uportal-ant-tasks-full.classpath      - The uportal-ant-tasks classpath including the uportal-ant-tasks JAR
     +-->
    <macrodef name="uportal-ant-tasks-macro">
        <element name="ant-tasks-sub-tasks" optional="false" implicit="true" />

        <sequential>
            <antcall target="checkVersion" />
            <uportal-ear-deployer-macro>
                <fileset id="uportal-ear-deployer-artifacts" file="${uportal-ear-deployer.artifact}" />
                <maven-artifact-macro project-name="uportal-ant-tasks" project-path="${uportal-ant-tasks.dir}" checkfilesid="uportal-ear-deployer-artifacts">
                    <!--
                     | Include the uportal-ear-deployer JAR in the final classpath
                     +-->
                    <path id="uportal-ant-tasks-full.classpath">
                        <path refid="uportal-ant-tasks.classpath" />
                        <pathelement location="${uportal-ant-tasks.artifact}" />
                    </path>

                    <!--
                     | Execute the ant-tasks-sub-tasks
                     +-->
                    <ant-tasks-sub-tasks />
                </maven-artifact-macro>
            </uportal-ear-deployer-macro>
        </sequential>
    </macrodef>


    <!--
     | Installs just the root uPortal pom
     +-->
    <target name="install-root-pom">
        <antcall target="mvn">
            <param name="dir" value="${basedir}" />
            <param name="goal" value="-N" />
            <param name="goal1" value="install" />
        </antcall>
    </target>

    <!--
     | Utility target for executing a maven with some number (up to 10) of goals. The
     | target should automaticly work on all OSs as long as 'mvn' is on the path.
     +-->
    <target name="mvn">
        <property name="goal" value="" />
        <property name="goal1" value="" />
        <property name="goal2" value="" />
        <property name="goal3" value="" />
        <property name="goal4" value="" />
        <property name="goal5" value="" />
        <property name="goal6" value="" />
        <property name="goal7" value="" />
        <property name="goal8" value="" />
        <property name="goal9" value="" />

        <if>
            <os family="windows" />
            <then>
                <property name="mvnExecutable" value="mvn.bat" />
            </then>
            <else>
                <property name="mvnExecutable" value="mvn" />
            </else>
        </if>

        <exec executable="${mvnExecutable}" dir="${dir}" vmlauncher="true" resolveexecutable="true" searchpath="true" failonerror="true">
            <arg value="${goal}" />
            <arg value="${goal1}" />
            <arg value="${goal2}" />
            <arg value="${goal3}" />
            <arg value="${goal4}" />
            <arg value="${goal5}" />
            <arg value="${goal6}" />
            <arg value="${goal7}" />
            <arg value="${goal8}" />
            <arg value="${goal9}" />
        </exec>
    </target>

    <target name="checkVersion">
        <if>
            <contains string="${ant.version}" substring="1.7.0" />
            <then>
                <fail message="The nested macros in this build.xml do not work with '${ant.version}', the current recommended version is 1.6.5" />
            </then>
        </if>
    </target>

    <!-- ============================== Ant Extensions ============================== -->

    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
        <classpath>
            <pathelement location="${basedir}/bootstrap/maven-ant-tasks-2.0.7.jar" />
        </classpath>
    </typedef>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${basedir}/bootstrap/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>


    <macrodef name="echo-path">
        <attribute name="pathref" />
        <sequential>
            <echo>echoing path=@{pathref}</echo>
            <for param="fromfile">
                <path refid="@{pathref}" />
                <sequential>
                    <echo>@{fromfile}</echo>
                </sequential>
            </for>
        </sequential>
    </macrodef>

    <macrodef name="echo-fileset">
        <attribute name="filesetref" />
        <sequential>
            <pathconvert pathsep="\n" property="@{filesetref}.echopath">
                <path>
                    <fileset refid="@{filesetref}" />
                </path>
            </pathconvert>
            <echo>   ------- echoing fileset @{filesetref} -------</echo>
            <echo>${@{filesetref}.echopath}</echo>
        </sequential>
    </macrodef>
</project>